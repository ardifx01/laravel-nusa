name: Tests

on:
  workflow_run:
    workflows: [Prepare]
    types:
      - completed
  # schedule: # scheduled to run at 23.00 on Saturday (UTC), means 6.00 on Monday (WIB)
  #   - cron: '0 23 * * 6'
  # pull_request:
  #   branches: [main]
  # push:
  #   branches: [main]
  #   paths: ['.github/**.yml', 'src/*', 'tests/*']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Test on PHP ${{ matrix.php }} Laravel ${{ matrix.laravel }} DB ${{ matrix.db }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      DB_CONNECTION: ${{ matrix.db }}
      DB_DATABASE: ${{ github.repository_owner }}
      DB_USERNAME: ${{ github.repository_owner }}
      DB_PASSWORD: secret

    services:
      postgresql:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd=pg_isready
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_USER: ${{ env.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        db: [mysql, pgsql, sqlite]
        include:
          - php: 8.4
            laravel: 12.x
          - php: 8.3
            laravel: 11.x
          - php: 8.2
            laravel: 10.x

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: xdebug
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Composer Caches
        id: composer
        env:
          LARAVEL_VERSION: ${{ matrix.laravel }}
          COMPOSER_CACHE_KEY: php-${{ matrix.php }}
        run: |
          if ! [ -z "${LARAVEL_VERSION}" ]; then COMPOSER_CACHE_KEY="${COMPOSER_CACHE_KEY}-l${LARAVEL_VERSION}"; fi
          echo "cache-dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "cache-key=${COMPOSER_CACHE_KEY}" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer.outputs.cache-dir }}
          key: ${{ steps.composer.outputs.cache-key }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ steps.composer.outputs.cache-key }}-composer-

      - name: Install dependencies
        run: |
          composer require "laravel/framework=${{ matrix.laravel }}" --no-update
          composer update --prefer-dist --no-interaction --no-progress

      - name: Download Embedded Databases
        uses: dawidd6/action-download-artifact@v10
        with:
          name: embedded-database
          path: database
          if_no_artifact_found: warn

      - name: Run migrations
        run: |
          ./vendor/bin/testbench vendor:publish --ansi --tag creasi-migrations
          ./vendor/bin/testbench migrate --ansi

      - name: Run tests
        run: |
          ./vendor/bin/testbench package:test --ansi --coverage

      - name: Generate reports for CodeClimate
        id: reports
        if: needs.configs.outputs.has-codeclimate == '1'
        env:
          CODECLIMATE_REPORT: tests/reports/codeclimate.PHP${{ matrix.php }}-L${{ matrix.laravel }}-${{ matrix.db }}.json
          CC_TEST_REPORTER_URL: ${{ vars.CC_TEST_REPORTER_URL }}
        run: |
          curl -LSs $CC_TEST_REPORTER_URL > ./cc-test-reporter && chmod +x ./cc-test-reporter
          ./cc-test-reporter format-coverage -t clover -o $CODECLIMATE_REPORT tests/reports/clover.xml

      - name: Store tests reports
        uses: actions/upload-artifact@v4
        if: needs.configs.outputs.has-codeclimate == '1'
        with:
          retention-days: 14
          name: test-reports-PHP${{ matrix.php }}-L${{ matrix.laravel }}-${{ matrix.db }}
          path: tests/reports/codeclimate.*.json

  # reports:
  #   name: Report Test Coverages
  #   needs: [configs, tests]
  #   if: needs.configs.outputs.should-reports == '1'
  #   uses: projek-xyz/actions/.github/workflows/report.yml@main
  #   secrets:
  #     CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  #   with:
  #     has-coveralls: ${{ needs.configs.outputs.has-coveralls == '1' }}
  #     has-codeclimate: ${{ needs.configs.outputs.has-codeclimate == '1' }}
