name: Upstream

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch target'
        default: main
        type: string
      composer-cache-dir:
        required: true
        type: string
      composer-cache-key:
        default: php-${{ inputs.php-version }}
        type: string
      php-version:
        default:  '8.2'
        type: string

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    outputs:
      artifact-exists: ${{ steps.database.outputs.found_artifact }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target-branch }}
          submodules: true

      - name: Download Embedded Databases
        id: database
        uses: dawidd6/action-download-artifact@v10
        with:
          if_no_artifact_found: warn
          name: imported-database
          path: database
          ref: ${{ inputs.target-branch }}
          workflow_search: true

  import:
    name: Import Database
    runs-on: ubuntu-latest
    if: ${{ needs.check.outputs.artifact-exists }}
    needs: check
    env:
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: ${{ github.repository_owner }}
      UPSTREAM_DB_DATABASE: nusantara

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target-branch }}
          submodules: true

      - name: Setup MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USERNAME }} -p${{ env.DB_PASSWORD }}
          mysql -e 'CREATE DATABASE ${{ env.UPSTREAM_DB_DATABASE }};' -u${{ env.DB_USERNAME }} -p${{ env.DB_PASSWORD }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php-version }}
          tools: composer:v2

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ inputs.composer-cache-dir }}
          key: ${{ inputs.composer-cache-key }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ inputs.composer-cache-key }}-composer-

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress

      - name: Import databases
        env:
          COLUMNS: 100
        run: ./vendor/bin/testbench nusa:import --fresh --ansi

      - name: Store Embedded Database
        uses: actions/upload-artifact@v4
        with:
          name: imported-database
          path: |
            database/nusa.sqlite
